//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wanc.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class wanc_dbEntities : DbContext
    {
        public wanc_dbEntities()
            : base("name=wanc_dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Admin> Admins { get; set; }
        public DbSet<Banner> Banners { get; set; }
        public DbSet<Brand> Brands { get; set; }
        public DbSet<Category> Categories { get; set; }
        public DbSet<City> Cities { get; set; }
        public DbSet<Client> Clients { get; set; }
        public DbSet<KartDetail> KartDetails { get; set; }
        public DbSet<MinOrder_For_sallers> MinOrder_For_sallers { get; set; }
        public DbSet<OrderDetail> OrderDetails { get; set; }
        public DbSet<OTP> OTPs { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<ProductImage> ProductImages { get; set; }
        public DbSet<profilepic> profilepics { get; set; }
        public DbSet<Puchase> Puchases { get; set; }
        public DbSet<PurchaseDetail> PurchaseDetails { get; set; }
        public DbSet<sallerDetail> sallerDetails { get; set; }
        public DbSet<subcategory> subcategories { get; set; }
        public DbSet<tbl_address> tbl_address { get; set; }
        public DbSet<tbl_apikeys> tbl_apikeys { get; set; }
        public DbSet<tbl_cashback> tbl_cashback { get; set; }
        public DbSet<tbl_Contact> tbl_Contact { get; set; }
        public DbSet<Tbl_DeliveryCharge> Tbl_DeliveryCharge { get; set; }
        public DbSet<tbl_Dimensions> tbl_Dimensions { get; set; }
        public DbSet<tbl_HomePageCaetegories> tbl_HomePageCaetegories { get; set; }
        public DbSet<tbl_Notifcation> tbl_Notifcation { get; set; }
        public DbSet<tbl_offerbanner> tbl_offerbanner { get; set; }
        public DbSet<tbl_orderdate> tbl_orderdate { get; set; }
        public DbSet<tbl_pincode> tbl_pincode { get; set; }
        public DbSet<tbl_review> tbl_review { get; set; }
        public DbSet<tbl_Specifications> tbl_Specifications { get; set; }
        public DbSet<tbl_user> tbl_user { get; set; }
        public DbSet<tbl_wallettrans> tbl_wallettrans { get; set; }
        public DbSet<tbl_WishList> tbl_WishList { get; set; }
        public DbSet<tbl_checkout> tbl_checkout { get; set; }
        public DbSet<tbl_Order> tbl_Order { get; set; }
        public DbSet<tbl_registration> tbl_registration { get; set; }
    
        public virtual int sp_userregistration(Nullable<int> iD, string email, string name, string password, string mobile, string lastname)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userregistration", iDParameter, emailParameter, nameParameter, passwordParameter, mobileParameter, lastnameParameter);
        }
    }
}
